/*
 * 
 */
package crystal.diagram.edit.parts;

/**
 * @generated
 */
public class FunctionFunctionParametersCompartmentEditPart extends org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeCompartmentEditPart  {

			/**
 * @generated
 */
	public static final int VISUAL_ID = 7006;
	
		/**
 * @generated
 */
	public FunctionFunctionParametersCompartmentEditPart(org.eclipse.gmf.runtime.notation.View view) {
		super(view);
	}
	
			
		/**
 * @generated
 */
	public String getCompartmentName() {
		return crystal.diagram.part.Messages.FunctionFunctionParametersCompartmentEditPart_title;
	}
	
						/**
 * @generated
 */
		public org.eclipse.draw2d.IFigure createFigure() {
			org.eclipse.gmf.runtime.diagram.ui.figures.ResizableCompartmentFigure result = (org.eclipse.gmf.runtime.diagram.ui.figures.ResizableCompartmentFigure) super.createFigure();
			result.setTitleVisibility(false);
			return result;
		}
		
		/**
 * @generated
 */
	protected void createDefaultEditPolicies() {
			super.createDefaultEditPolicies();
			installEditPolicy(org.eclipse.gef.EditPolicy.PRIMARY_DRAG_ROLE, new org.eclipse.gmf.runtime.diagram.ui.editpolicies.ResizableCompartmentEditPolicy());
			installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.SEMANTIC_ROLE, new crystal.diagram.edit.policies.FunctionFunctionParametersCompartmentItemSemanticEditPolicy());
				installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CREATION_ROLE, new org.eclipse.gmf.tooling.runtime.edit.policies.reparent.CreationEditPolicyWithCustomReparent(crystal.diagram.part.CrystalVisualIDRegistry.TYPED_INSTANCE));
		installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.DRAG_DROP_ROLE, new org.eclipse.gmf.runtime.diagram.ui.editpolicies.DragDropEditPolicy());
			installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CANONICAL_ROLE, new crystal.diagram.edit.policies.FunctionFunctionParametersCompartmentCanonicalEditPolicy());
					}
	
			
			
			
		/**
 * @generated
 */
	protected void setRatio(Double ratio) {
				if (getFigure().getParent().getLayoutManager() instanceof org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout) {
			super.setRatio(ratio);
		}
			}
	
	
	/**
 * @generated
 */
	public org.eclipse.gef.EditPart getTargetEditPart(org.eclipse.gef.Request request) {
					if (request instanceof org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewAndElementRequest) {
				org.eclipse.gmf.runtime.diagram.core.edithelpers.CreateElementRequestAdapter adapter = ((org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewAndElementRequest) request).getViewAndElementDescriptor().getCreateElementRequestAdapter();
				org.eclipse.gmf.runtime.emf.type.core.IElementType type = (org.eclipse.gmf.runtime.emf.type.core.IElementType) adapter.getAdapter(org.eclipse.gmf.runtime.emf.type.core.IElementType.class);
							if (type == crystal.diagram.providers.CrystalElementTypes.DataType_3022) {
					return this;
				}
							if (type == crystal.diagram.providers.CrystalElementTypes.Collections_3023) {
					return this;
				}
							if (type == crystal.diagram.providers.CrystalElementTypes.Records_3024) {
					return this;
				}
							if (type == crystal.diagram.providers.CrystalElementTypes.Cursor_3025) {
					return this;
				}
							return getParent().getTargetEditPart(request);
			}
			if (request instanceof org.eclipse.gmf.runtime.diagram.ui.requests.CreateUnspecifiedTypeConnectionRequest) {
								return getParent().getTargetEditPart(request);
			}
				return super.getTargetEditPart(request);
	}
	
	}
