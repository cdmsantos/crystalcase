/*
 * 
 */
package crystal.diagram.edit.policies;

import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gef.commands.Command;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.emf.commands.core.commands.DuplicateEObjectsCommand;
import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
import org.eclipse.gmf.runtime.emf.type.core.requests.DuplicateElementsRequest;

import crystal.diagram.edit.commands.AnonymousBlockCreateCommand;
import crystal.diagram.edit.commands.DeclarativePartCreateCommand;
import crystal.diagram.edit.commands.ExecutablePartCreateCommand;
import crystal.diagram.edit.commands.FunctionCreateCommand;
import crystal.diagram.edit.commands.ParametersCreateCommand;
import crystal.diagram.edit.commands.ProcedureCreateCommand;
import crystal.diagram.edit.commands.ReturnCreateCommand;
import crystal.diagram.providers.CrystalElementTypes;

/**
 * @generated
 */
public class CrystalItemSemanticEditPolicy extends
		CrystalBaseItemSemanticEditPolicy {

	/**
	 * @generated
	 */
	public CrystalItemSemanticEditPolicy() {
		super(CrystalElementTypes.Crystal_1000);
	}

	/**
	 * @generated
	 */
	protected Command getCreateCommand(CreateElementRequest req) {
		if (CrystalElementTypes.Parameters_2001 == req.getElementType()) {
			return getGEFWrapper(new ParametersCreateCommand(req));
		}
		if (CrystalElementTypes.Return_2002 == req.getElementType()) {
			return getGEFWrapper(new ReturnCreateCommand(req));
		}
		if (CrystalElementTypes.DeclarativePart_2003 == req.getElementType()) {
			return getGEFWrapper(new DeclarativePartCreateCommand(req));
		}
		if (CrystalElementTypes.ExecutablePart_2004 == req.getElementType()) {
			return getGEFWrapper(new ExecutablePartCreateCommand(req));
		}
		if (CrystalElementTypes.Procedure_2005 == req.getElementType()) {
			return getGEFWrapper(new ProcedureCreateCommand(req));
		}
		if (CrystalElementTypes.Function_2006 == req.getElementType()) {
			return getGEFWrapper(new FunctionCreateCommand(req));
		}
		if (CrystalElementTypes.AnonymousBlock_2007 == req.getElementType()) {
			return getGEFWrapper(new AnonymousBlockCreateCommand(req));
		}
		return super.getCreateCommand(req);
	}

	/**
	 * @generated
	 */
	protected Command getDuplicateCommand(DuplicateElementsRequest req) {
		TransactionalEditingDomain editingDomain = ((IGraphicalEditPart) getHost())
				.getEditingDomain();
		return getGEFWrapper(new DuplicateAnythingCommand(editingDomain, req));
	}

	/**
	 * @generated
	 */
	private static class DuplicateAnythingCommand extends
			DuplicateEObjectsCommand {

		/**
		 * @generated
		 */
		public DuplicateAnythingCommand(
				TransactionalEditingDomain editingDomain,
				DuplicateElementsRequest req) {
			super(editingDomain, req.getLabel(), req
					.getElementsToBeDuplicated(), req
					.getAllDuplicatedElementsMap());
		}

	}

}
