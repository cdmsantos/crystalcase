/*
 * 
 */
package crystal.diagram.providers;

/**
 * @generated
 */
public class CrystalValidationProvider {

	/**
 * @generated
 */
private static boolean constraintsActive = false;	

	/**
 * @generated
 */
public static boolean shouldConstraintsBePrivate() {
	return false;
}

	/**
 * @generated
 */
public static void runWithConstraints(org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain, Runnable operation) {
	final Runnable op = operation;
	Runnable task = new Runnable() {
		public void run() {
			try {
				constraintsActive = true;
				op.run();
			} finally {
				constraintsActive = false;
			}
		}
	};
	if(editingDomain != null) {
		try {
			editingDomain.runExclusive(task);
		} catch (Exception e) {
			crystal.diagram.part.CrystalDiagramEditorPlugin.getInstance().logError("Validation failed", e);  //$NON-NLS-1$
		}
	} else {
		task.run();
	}
}

	/**
 * @generated
 */
static boolean isInDefaultEditorContext(Object object) {
	if(shouldConstraintsBePrivate() && !constraintsActive) {
		return false;
	}
	if (object instanceof org.eclipse.gmf.runtime.notation.View) {
		return constraintsActive && crystal.diagram.edit.parts.CrystalEditPart.MODEL_ID.equals(crystal.diagram.part.CrystalVisualIDRegistry.getModelID((org.eclipse.gmf.runtime.notation.View) object));
	}
	return true;
}





}
