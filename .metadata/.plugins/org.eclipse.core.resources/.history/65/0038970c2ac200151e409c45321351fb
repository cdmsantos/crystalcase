/*
 * 
 */
package crystal.diagram.edit.policies;

import org.eclipse.gef.commands.Command;
import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;

import crystal.diagram.edit.commands.Case3CreateCommand;
import crystal.diagram.edit.commands.Close3CreateCommand;
import crystal.diagram.edit.commands.Delete3CreateCommand;
import crystal.diagram.edit.commands.Exception3CreateCommand;
import crystal.diagram.edit.commands.Expressions3CreateCommand;
import crystal.diagram.edit.commands.Fetch3CreateCommand;
import crystal.diagram.edit.commands.For3CreateCommand;
import crystal.diagram.edit.commands.If3CreateCommand;
import crystal.diagram.edit.commands.Insert3CreateCommand;
import crystal.diagram.edit.commands.Loop3CreateCommand;
import crystal.diagram.edit.commands.Open3CreateCommand;
import crystal.diagram.edit.commands.Select3CreateCommand;
import crystal.diagram.edit.commands.Update3CreateCommand;
import crystal.diagram.edit.commands.While3CreateCommand;
import crystal.diagram.providers.CrystalElementTypes;

/**
 * @generated
 */
public class FunctionFunctionExecutablePartCompartmentItemSemanticEditPolicy
		extends CrystalBaseItemSemanticEditPolicy {

	/**
	 * @generated
	 */
	public FunctionFunctionExecutablePartCompartmentItemSemanticEditPolicy() {
		super(CrystalElementTypes.Function_2006);
	}

	/**
	 * @generated
	 */
	protected Command getCreateCommand(CreateElementRequest req) {
		if (CrystalElementTypes.Expressions_3057 == req.getElementType()) {
			return getGEFWrapper(new Expressions3CreateCommand(req));
		}
		if (CrystalElementTypes.Exception_3058 == req.getElementType()) {
			return getGEFWrapper(new Exception3CreateCommand(req));
		}
		if (CrystalElementTypes.If_3059 == req.getElementType()) {
			return getGEFWrapper(new If3CreateCommand(req));
		}
		if (CrystalElementTypes.Case_3060 == req.getElementType()) {
			return getGEFWrapper(new Case3CreateCommand(req));
		}
		if (CrystalElementTypes.Insert_3061 == req.getElementType()) {
			return getGEFWrapper(new Insert3CreateCommand(req));
		}
		if (CrystalElementTypes.Update_3062 == req.getElementType()) {
			return getGEFWrapper(new Update3CreateCommand(req));
		}
		if (CrystalElementTypes.Delete_3063 == req.getElementType()) {
			return getGEFWrapper(new Delete3CreateCommand(req));
		}
		if (CrystalElementTypes.Select_3064 == req.getElementType()) {
			return getGEFWrapper(new Select3CreateCommand(req));
		}
		if (CrystalElementTypes.While_3065 == req.getElementType()) {
			return getGEFWrapper(new While3CreateCommand(req));
		}
		if (CrystalElementTypes.For_3066 == req.getElementType()) {
			return getGEFWrapper(new For3CreateCommand(req));
		}
		if (CrystalElementTypes.Loop_3067 == req.getElementType()) {
			return getGEFWrapper(new Loop3CreateCommand(req));
		}
		if (CrystalElementTypes.Open_3068 == req.getElementType()) {
			return getGEFWrapper(new Open3CreateCommand(req));
		}
		if (CrystalElementTypes.Fetch_3069 == req.getElementType()) {
			return getGEFWrapper(new Fetch3CreateCommand(req));
		}
		if (CrystalElementTypes.Close_3070 == req.getElementType()) {
			return getGEFWrapper(new Close3CreateCommand(req));
		}
		return super.getCreateCommand(req);
	}

}
