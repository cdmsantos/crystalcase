/*
 * 
 */
package filesystem.diagram.providers;

/**
 * @generated
 */
public class FilesystemElementTypes {

		/**
 * @generated
 */
private FilesystemElementTypes() {
}
	
		/**
 * @generated
 */
private static java.util.Map<org.eclipse.gmf.runtime.emf.type.core.IElementType, org.eclipse.emf.ecore.ENamedElement> elements;

	/**
 * @generated
 */
private static org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypeImages elementTypeImages = new org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypeImages(	filesystem.diagram.part.FilesystemDiagramEditorPlugin.getInstance().getItemProvidersAdapterFactory());

	/**
 * @generated
 */
private static java.util.Set<org.eclipse.gmf.runtime.emf.type.core.IElementType> KNOWN_ELEMENT_TYPES;
	
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Filesystem_1000 = getElementType("filesystem.diagram.Filesystem_1000");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Drive_2001 = getElementType("filesystem.diagram.Drive_2001");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Drive_3001 = getElementType("filesystem.diagram.Drive_3001");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Folder_3002 = getElementType("filesystem.diagram.Folder_3002");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Shortcut_3003 = getElementType("filesystem.diagram.Shortcut_3003");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType File_3004 = getElementType("filesystem.diagram.File_3004");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Sync_4001 = getElementType("filesystem.diagram.Sync_4001");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType ShortcutTarget_4002 = getElementType("filesystem.diagram.ShortcutTarget_4002");  //$NON-NLS-1$
		
		/**
 * @generated
 */
public static org.eclipse.jface.resource.ImageDescriptor getImageDescriptor(org.eclipse.emf.ecore.ENamedElement element) {
	return elementTypeImages.getImageDescriptor(element);
}

		/**
 * @generated
 */
public static org.eclipse.swt.graphics.Image getImage(org.eclipse.emf.ecore.ENamedElement element) {
	return elementTypeImages.getImage(element);
}

		/**
 * @generated
 */
public static org.eclipse.jface.resource.ImageDescriptor getImageDescriptor(org.eclipse.core.runtime.IAdaptable hint) {
	return getImageDescriptor(getElement(hint));
}

		/**
 * @generated
 */
public static org.eclipse.swt.graphics.Image getImage(org.eclipse.core.runtime.IAdaptable hint) {
	return getImage(getElement(hint));
}

		/**
 * Returns 'type' of the ecore object associated with the hint.
 * 
 * @generated
 */
public static org.eclipse.emf.ecore.ENamedElement getElement(org.eclipse.core.runtime.IAdaptable hint) {
	Object type = hint.getAdapter(org.eclipse.gmf.runtime.emf.type.core.IElementType.class);
	if (elements == null) {
		elements = new java.util.IdentityHashMap<org.eclipse.gmf.runtime.emf.type.core.IElementType, org.eclipse.emf.ecore.ENamedElement>();
		
	elements.put(Filesystem_1000, filesystem.FilesystemPackage.eINSTANCE.getFilesystem());
					
	
	elements.put(Drive_2001, filesystem.FilesystemPackage.eINSTANCE.getDrive());
					
	
	elements.put(Drive_3001, filesystem.FilesystemPackage.eINSTANCE.getDrive());
					
	
	elements.put(Folder_3002, filesystem.FilesystemPackage.eINSTANCE.getFolder());
					
	
	elements.put(Shortcut_3003, filesystem.FilesystemPackage.eINSTANCE.getShortcut());
					
	
	elements.put(File_3004, filesystem.FilesystemPackage.eINSTANCE.getFile());
							
	
	elements.put(Sync_4001, filesystem.FilesystemPackage.eINSTANCE.getSync());
					
	elements.put(ShortcutTarget_4002, filesystem.FilesystemPackage.eINSTANCE.getShortcut_Target());
			}
	return (org.eclipse.emf.ecore.ENamedElement) elements.get(type);
}

		/**
 * @generated
 */
private static org.eclipse.gmf.runtime.emf.type.core.IElementType getElementType(String id) {
	return org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry.getInstance().getType(id);
}

		/**
 * @generated
 */
public static boolean isKnownElementType(org.eclipse.gmf.runtime.emf.type.core.IElementType elementType) {
	if (KNOWN_ELEMENT_TYPES == null) {
		KNOWN_ELEMENT_TYPES = new java.util.HashSet<org.eclipse.gmf.runtime.emf.type.core.IElementType>();
			KNOWN_ELEMENT_TYPES.add(Filesystem_1000);
		KNOWN_ELEMENT_TYPES.add(Drive_2001);
		KNOWN_ELEMENT_TYPES.add(Drive_3001);
		KNOWN_ELEMENT_TYPES.add(Folder_3002);
		KNOWN_ELEMENT_TYPES.add(Shortcut_3003);
		KNOWN_ELEMENT_TYPES.add(File_3004);
		KNOWN_ELEMENT_TYPES.add(Sync_4001);
		KNOWN_ELEMENT_TYPES.add(ShortcutTarget_4002);
		}
	return KNOWN_ELEMENT_TYPES.contains(elementType);
}
	
		/**
 * @generated
 */
	public static org.eclipse.gmf.runtime.emf.type.core.IElementType getElementType(int visualID) {
		switch (visualID) {
				case filesystem.diagram.edit.parts.FilesystemEditPart.VISUAL_ID:		return Filesystem_1000;
	case filesystem.diagram.edit.parts.DriveEditPart.VISUAL_ID:		return Drive_2001;
	case filesystem.diagram.edit.parts.Drive2EditPart.VISUAL_ID:		return Drive_3001;
	case filesystem.diagram.edit.parts.FolderEditPart.VISUAL_ID:		return Folder_3002;
	case filesystem.diagram.edit.parts.ShortcutEditPart.VISUAL_ID:		return Shortcut_3003;
	case filesystem.diagram.edit.parts.FileEditPart.VISUAL_ID:		return File_3004;
	case filesystem.diagram.edit.parts.SyncEditPart.VISUAL_ID:		return Sync_4001;
	case filesystem.diagram.edit.parts.ShortcutTargetEditPart.VISUAL_ID:		return ShortcutTarget_4002;
		}
		return null;
	}
	
		/**
 * @generated
 */
	public static final org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypes TYPED_INSTANCE 
		= new org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypes(elementTypeImages) {
		
		/**
 * @generated
 */
		@Override

		public boolean isKnownElementType(org.eclipse.gmf.runtime.emf.type.core.IElementType elementType) {
			return filesystem.diagram.providers.FilesystemElementTypes.isKnownElementType(elementType);
		}
		
		/**
 * @generated
 */
		@Override

		public org.eclipse.gmf.runtime.emf.type.core.IElementType getElementTypeForVisualId(int visualID) {
			return filesystem.diagram.providers.FilesystemElementTypes.getElementType(visualID);
		}
		
		/**
 * @generated
 */
		@Override

		public org.eclipse.emf.ecore.ENamedElement getDefiningNamedElement(org.eclipse.core.runtime.IAdaptable elementTypeAdapter) {
			return filesystem.diagram.providers.FilesystemElementTypes.getElement(elementTypeAdapter);
		}
	}; 

	}
