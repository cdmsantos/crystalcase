/*
 * 
 */
package filesystem.diagram.edit.parts;

/**
 * @generated
 */
public class Case2EditPart extends org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart  {

			/**
 * @generated
 */
	public static final int VISUAL_ID = 3006;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure contentPane;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure primaryShape;
	
		/**
 * @generated
 */
	public Case2EditPart(org.eclipse.gmf.runtime.notation.View view) {
		super(view);
	}
	
		/**
 * @generated
 */
	protected void createDefaultEditPolicies() {
			super.createDefaultEditPolicies();
			installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.SEMANTIC_ROLE, new filesystem.diagram.edit.policies.Case2ItemSemanticEditPolicy());
							installEditPolicy(org.eclipse.gef.EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
			installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.OPEN_ROLE,
		new filesystem.diagram.edit.policies.OpenDiagramEditPolicy());	// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
	// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
		}
	
		/**
 * @generated
 */
	protected org.eclipse.gef.editpolicies.LayoutEditPolicy createLayoutEditPolicy() {
					org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy() {

			protected org.eclipse.gef.EditPolicy createChildEditPolicy(org.eclipse.gef.EditPart child) {
								org.eclipse.gef.EditPolicy result = child.getEditPolicy(org.eclipse.gef.EditPolicy.PRIMARY_DRAG_ROLE);
				if (result == null) {
					result = new org.eclipse.gef.editpolicies.NonResizableEditPolicy();
				}
				return result;
			}

			protected org.eclipse.gef.commands.Command getMoveChildrenCommand(org.eclipse.gef.Request request) {
				return null;
			}

			protected org.eclipse.gef.commands.Command getCreateCommand(org.eclipse.gef.requests.CreateRequest request) {
				return null;
			}
		};
		return lep;
		}
	
		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure createNodeShape() {
		return primaryShape = new CaseFigure();
	}

		/**
 * @generated
 */
	public CaseFigure getPrimaryShape() {
		return (CaseFigure) primaryShape;
	}
	
		/**
 * @generated
 */
	protected boolean addFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseNameExecutablePart2EditPart) {
			((filesystem.diagram.edit.parts.CaseNameExecutablePart2EditPart) childEditPart).setLabel(getPrimaryShape().getFigureCaseLabelFigure());
			return true;
		}
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseIfsCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseIfsCompartmentFigure();
			setupContentPane(pane); // FIXME each comparment should handle his content pane in his own way 
			pane.add(((filesystem.diagram.edit.parts.CaseCaseIfsCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseCasesCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseCasesCompartmentFigure();
			setupContentPane(pane); // FIXME each comparment should handle his content pane in his own way 
			pane.add(((filesystem.diagram.edit.parts.CaseCaseCasesCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseInsertsCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseInsertsCompartmentFigure();
			setupContentPane(pane); // FIXME each comparment should handle his content pane in his own way 
			pane.add(((filesystem.diagram.edit.parts.CaseCaseInsertsCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseUpdatesCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseUpdatesCompartmentFigure();
			setupContentPane(pane); // FIXME each comparment should handle his content pane in his own way 
			pane.add(((filesystem.diagram.edit.parts.CaseCaseUpdatesCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseDeletesCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseDeletesCompartmentFigure();
			setupContentPane(pane); // FIXME each comparment should handle his content pane in his own way 
			pane.add(((filesystem.diagram.edit.parts.CaseCaseDeletesCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseSelectsCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseSelectsCompartmentFigure();
			setupContentPane(pane); // FIXME each comparment should handle his content pane in his own way 
			pane.add(((filesystem.diagram.edit.parts.CaseCaseSelectsCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseOutuputsCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseOutuputsCompartmentFigure();
			setupContentPane(pane); // FIXME each comparment should handle his content pane in his own way 
			pane.add(((filesystem.diagram.edit.parts.CaseCaseOutuputsCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseCursorsCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseCursorsCompartmentFigure();
			setupContentPane(pane); // FIXME each comparment should handle his content pane in his own way 
			pane.add(((filesystem.diagram.edit.parts.CaseCaseCursorsCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseWhilesCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseWhilesCompartmentFigure();
			setupContentPane(pane); // FIXME each comparment should handle his content pane in his own way 
			pane.add(((filesystem.diagram.edit.parts.CaseCaseWhilesCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseForsCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseForsCompartmentFigure();
			setupContentPane(pane); // FIXME each comparment should handle his content pane in his own way 
			pane.add(((filesystem.diagram.edit.parts.CaseCaseForsCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseLoopsCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseLoopsCompartmentFigure();
			setupContentPane(pane); // FIXME each comparment should handle his content pane in his own way 
			pane.add(((filesystem.diagram.edit.parts.CaseCaseLoopsCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		return false;
	}

		/**
 * @generated
 */
	protected boolean removeFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseNameExecutablePart2EditPart) {
			return true;
		}
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseIfsCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseIfsCompartmentFigure();
			pane.remove(((filesystem.diagram.edit.parts.CaseCaseIfsCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseCasesCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseCasesCompartmentFigure();
			pane.remove(((filesystem.diagram.edit.parts.CaseCaseCasesCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseInsertsCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseInsertsCompartmentFigure();
			pane.remove(((filesystem.diagram.edit.parts.CaseCaseInsertsCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseUpdatesCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseUpdatesCompartmentFigure();
			pane.remove(((filesystem.diagram.edit.parts.CaseCaseUpdatesCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseDeletesCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseDeletesCompartmentFigure();
			pane.remove(((filesystem.diagram.edit.parts.CaseCaseDeletesCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseSelectsCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseSelectsCompartmentFigure();
			pane.remove(((filesystem.diagram.edit.parts.CaseCaseSelectsCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseOutuputsCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseOutuputsCompartmentFigure();
			pane.remove(((filesystem.diagram.edit.parts.CaseCaseOutuputsCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseCursorsCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseCursorsCompartmentFigure();
			pane.remove(((filesystem.diagram.edit.parts.CaseCaseCursorsCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseWhilesCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseWhilesCompartmentFigure();
			pane.remove(((filesystem.diagram.edit.parts.CaseCaseWhilesCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseForsCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseForsCompartmentFigure();
			pane.remove(((filesystem.diagram.edit.parts.CaseCaseForsCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		if (childEditPart instanceof filesystem.diagram.edit.parts.CaseCaseLoopsCompartmentEditPart) {
			org.eclipse.draw2d.IFigure pane = getPrimaryShape().getCaseLoopsCompartmentFigure();
			pane.remove(((filesystem.diagram.edit.parts.CaseCaseLoopsCompartmentEditPart) childEditPart).getFigure());
			return true;
		}	
		return false;
	}

		/**
 * @generated
 */
	protected void addChildVisual(org.eclipse.gef.EditPart childEditPart, int index) {
		if (addFixedChild(childEditPart)) {
			return;
		}
		super.addChildVisual(childEditPart, -1);
	}

		/**
 * @generated
 */
	protected void removeChildVisual(org.eclipse.gef.EditPart childEditPart) {
		if (removeFixedChild(childEditPart)){
			return;
		}
		super.removeChildVisual(childEditPart);
	}

		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure getContentPaneFor(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart editPart) {
				if (editPart instanceof filesystem.diagram.edit.parts.CaseCaseIfsCompartmentEditPart) {
			return getPrimaryShape().getCaseIfsCompartmentFigure();
		}	
		if (editPart instanceof filesystem.diagram.edit.parts.CaseCaseCasesCompartmentEditPart) {
			return getPrimaryShape().getCaseCasesCompartmentFigure();
		}	
		if (editPart instanceof filesystem.diagram.edit.parts.CaseCaseInsertsCompartmentEditPart) {
			return getPrimaryShape().getCaseInsertsCompartmentFigure();
		}	
		if (editPart instanceof filesystem.diagram.edit.parts.CaseCaseUpdatesCompartmentEditPart) {
			return getPrimaryShape().getCaseUpdatesCompartmentFigure();
		}	
		if (editPart instanceof filesystem.diagram.edit.parts.CaseCaseDeletesCompartmentEditPart) {
			return getPrimaryShape().getCaseDeletesCompartmentFigure();
		}	
		if (editPart instanceof filesystem.diagram.edit.parts.CaseCaseSelectsCompartmentEditPart) {
			return getPrimaryShape().getCaseSelectsCompartmentFigure();
		}	
		if (editPart instanceof filesystem.diagram.edit.parts.CaseCaseOutuputsCompartmentEditPart) {
			return getPrimaryShape().getCaseOutuputsCompartmentFigure();
		}	
		if (editPart instanceof filesystem.diagram.edit.parts.CaseCaseCursorsCompartmentEditPart) {
			return getPrimaryShape().getCaseCursorsCompartmentFigure();
		}	
		if (editPart instanceof filesystem.diagram.edit.parts.CaseCaseWhilesCompartmentEditPart) {
			return getPrimaryShape().getCaseWhilesCompartmentFigure();
		}	
		if (editPart instanceof filesystem.diagram.edit.parts.CaseCaseForsCompartmentEditPart) {
			return getPrimaryShape().getCaseForsCompartmentFigure();
		}	
		if (editPart instanceof filesystem.diagram.edit.parts.CaseCaseLoopsCompartmentEditPart) {
			return getPrimaryShape().getCaseLoopsCompartmentFigure();
		}	
		return getContentPane();
	}

			
		/**
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodePlate() {
		org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure result = new org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure(40, 40);
				return result;
	}
	
						
		/**
 * Creates figure for this edit part.
 * 
 * Body of this method does not depend on settings in generation model
 * so you may safely remove <i>generated</i> tag and modify it.
 * 
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodeFigure() {
		org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure figure = createNodePlate();
		figure.setLayoutManager(new org.eclipse.draw2d.StackLayout());
		org.eclipse.draw2d.IFigure shape = createNodeShape();
		figure.add(shape);
		contentPane = setupContentPane(shape);
		return figure;
	}
	
		/**
 * Default implementation treats passed figure as content pane.
 * Respects layout one may have set for generated figure.
 * @param nodeShape instance of generated figure class
 * @generated
 */
	protected org.eclipse.draw2d.IFigure setupContentPane(org.eclipse.draw2d.IFigure nodeShape) {
					if (nodeShape.getLayoutManager() == null) {
									org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout layout =new org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout();
					layout.setSpacing(5);
					nodeShape.setLayoutManager(layout);
							}
				return nodeShape; // use nodeShape itself as contentPane
	}
	
		/**
 * @generated
 */
	public org.eclipse.draw2d.IFigure getContentPane() {
		if (contentPane != null) {
			return contentPane;
		}
		return super.getContentPane();
	}

		/**
 * @generated
 */
	protected void setForegroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setForegroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setBackgroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setBackgroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setLineWidth(int width) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineWidth(width);
		}
	}

		/**
 * @generated
 */
	protected void setLineType(int style) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineStyle(style);
		}
	}

				/**
 * @generated
 */
		public org.eclipse.gef.EditPart getPrimaryChildEditPart() {
			return getChildBySemanticHint(filesystem.diagram.part.FilesystemVisualIDRegistry.getType(filesystem.diagram.edit.parts.CaseNameExecutablePart2EditPart.VISUAL_ID));
		}
	

	
	
	
/**
 * @generated
 */
public class CaseFigure extends org.eclipse.draw2d.RoundedRectangle {


	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureCaseLabelFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.draw2d.RectangleFigure fCaseIfsCompartmentFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.draw2d.RectangleFigure fCaseCasesCompartmentFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.draw2d.RectangleFigure fCaseInsertsCompartmentFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.draw2d.RectangleFigure fCaseUpdatesCompartmentFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.draw2d.RectangleFigure fCaseDeletesCompartmentFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.draw2d.RectangleFigure fCaseSelectsCompartmentFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.draw2d.RectangleFigure fCaseOutuputsCompartmentFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.draw2d.RectangleFigure fCaseCursorsCompartmentFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.draw2d.RectangleFigure fCaseWhilesCompartmentFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.draw2d.RectangleFigure fCaseForsCompartmentFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.draw2d.RectangleFigure fCaseLoopsCompartmentFigure; 




	/**
	 * @generated
	 */
	public CaseFigure() {
				this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8)
, getMapMode().DPtoLP(8)
));
this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)
, getMapMode().DPtoLP(5)
, getMapMode().DPtoLP(5)
, getMapMode().DPtoLP(5)
));
		createContents();
	}
	/**
	 * @generated
	 */
	private void createContents(){


fFigureCaseLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();

fFigureCaseLabelFigure.setText("Case");
fFigureCaseLabelFigure.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(10000)
, getMapMode().DPtoLP(50)
));

this.add(fFigureCaseLabelFigure);



fCaseIfsCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();

fCaseIfsCompartmentFigure.setOutline(false);

this.add(fCaseIfsCompartmentFigure);



fCaseCasesCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();

fCaseCasesCompartmentFigure.setOutline(false);

this.add(fCaseCasesCompartmentFigure);



fCaseInsertsCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();

fCaseInsertsCompartmentFigure.setOutline(false);

this.add(fCaseInsertsCompartmentFigure);



fCaseUpdatesCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();

fCaseUpdatesCompartmentFigure.setOutline(false);

this.add(fCaseUpdatesCompartmentFigure);



fCaseDeletesCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();

fCaseDeletesCompartmentFigure.setOutline(false);

this.add(fCaseDeletesCompartmentFigure);



fCaseSelectsCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();

fCaseSelectsCompartmentFigure.setOutline(false);

this.add(fCaseSelectsCompartmentFigure);



fCaseOutuputsCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();

fCaseOutuputsCompartmentFigure.setOutline(false);

this.add(fCaseOutuputsCompartmentFigure);



fCaseCursorsCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();

fCaseCursorsCompartmentFigure.setOutline(false);

this.add(fCaseCursorsCompartmentFigure);



fCaseWhilesCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();

fCaseWhilesCompartmentFigure.setOutline(false);

this.add(fCaseWhilesCompartmentFigure);



fCaseForsCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();

fCaseForsCompartmentFigure.setOutline(false);

this.add(fCaseForsCompartmentFigure);



fCaseLoopsCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();

fCaseLoopsCompartmentFigure.setOutline(false);

this.add(fCaseLoopsCompartmentFigure);


	}





	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureCaseLabelFigure() {
		return fFigureCaseLabelFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.draw2d.RectangleFigure getCaseIfsCompartmentFigure() {
		return fCaseIfsCompartmentFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.draw2d.RectangleFigure getCaseCasesCompartmentFigure() {
		return fCaseCasesCompartmentFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.draw2d.RectangleFigure getCaseInsertsCompartmentFigure() {
		return fCaseInsertsCompartmentFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.draw2d.RectangleFigure getCaseUpdatesCompartmentFigure() {
		return fCaseUpdatesCompartmentFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.draw2d.RectangleFigure getCaseDeletesCompartmentFigure() {
		return fCaseDeletesCompartmentFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.draw2d.RectangleFigure getCaseSelectsCompartmentFigure() {
		return fCaseSelectsCompartmentFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.draw2d.RectangleFigure getCaseOutuputsCompartmentFigure() {
		return fCaseOutuputsCompartmentFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.draw2d.RectangleFigure getCaseCursorsCompartmentFigure() {
		return fCaseCursorsCompartmentFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.draw2d.RectangleFigure getCaseWhilesCompartmentFigure() {
		return fCaseWhilesCompartmentFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.draw2d.RectangleFigure getCaseForsCompartmentFigure() {
		return fCaseForsCompartmentFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.draw2d.RectangleFigure getCaseLoopsCompartmentFigure() {
		return fCaseLoopsCompartmentFigure;
	}


}


	
	}
