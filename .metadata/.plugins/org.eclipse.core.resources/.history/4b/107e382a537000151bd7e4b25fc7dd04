	/*
 * 
 */
package filesystem.diagram.edit.policies;

	/**
 * @generated
 */
public class FilesystemItemSemanticEditPolicy extends filesystem.diagram.edit.policies.FilesystemBaseItemSemanticEditPolicy {

		/**
 * @generated
 */
	public FilesystemItemSemanticEditPolicy() {
				super(filesystem.diagram.providers.FilesystemElementTypes.Filesystem_1000);
	}

	
	/**
 * @generated
 */
	protected org.eclipse.gef.commands.Command getCreateCommand(org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest req) {
		if (filesystem.diagram.providers.FilesystemElementTypes.Data_Type_2001 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.Data_TypeCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.If_2002 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.IfCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.Case_2003 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.CaseCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.Insert_2004 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.InsertCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.Update_2005 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.UpdateCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.Delete_2006 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.DeleteCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.Select_2007 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.SelectCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.Output_2008 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.OutputCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.Cursor_2009 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.CursorCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.While_2010 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.WhileCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.For_2011 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.ForCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.Loop_2012 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.LoopCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.ExceptionCommand_2013 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.ExceptionCommandCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.ParameterIn_2014 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.ParameterInCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.ParameterOut_2015 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.ParameterOutCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.ParameterInOut_2016 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.ParameterInOutCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.DeclarativePart_2017 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.DeclarativePartCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.ExecutablePart_2018 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.ExecutablePartCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.ExceptionPart_2019 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.ExceptionPartCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.Return_2020 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.ReturnCreateCommand(req));
}
		if (filesystem.diagram.providers.FilesystemElementTypes.Parameters_2021 == req.getElementType()) {
	return getGEFWrapper(new filesystem.diagram.edit.commands.ParametersCreateCommand(req));
}
		return super.getCreateCommand(req);
	}
	
		/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getDuplicateCommand(org.eclipse.gmf.runtime.emf.type.core.requests.DuplicateElementsRequest req) {
	org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = ((org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) getHost()).getEditingDomain();
	return getGEFWrapper(new DuplicateAnythingCommand(editingDomain, req));
}
	
		/**
 * @generated
 */
private static class DuplicateAnythingCommand extends org.eclipse.gmf.runtime.emf.commands.core.commands.DuplicateEObjectsCommand {

		/**
 * @generated
 */
public DuplicateAnythingCommand(org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain, org.eclipse.gmf.runtime.emf.type.core.requests.DuplicateElementsRequest req) {
	super(editingDomain, req.getLabel(), req.getElementsToBeDuplicated(), req.getAllDuplicatedElementsMap());
}

	}
	
	}
