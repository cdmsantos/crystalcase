@namespace(uri="test_function", prefix="test_function")
@gmf

package test_function;

@gmf.diagram(model.extension="test_function")
class Test_Function {
    //val Sync[*] syncs;

	val Sections[*] Sections;
}

class Sections extends Parameters, Return, Declarative_Part, Executable_Part{
	val Declarative_Part[1] Declarative_Part;
    val Executable_Part[1] Executable_Part;
    val Return[1] Return;
    val Parameters[1] Parameters;
}

class Parameters{
	val ParameterIn[*] Parameter_In;
	val ParameterOut[*] Parameter_Out;
	val ParameterInOut[*] Parameter_In_Out;
}

class Return{
}

class Declarative_Part {
}

class Executable_Part {
}

class Data_Type extends Return, Declarative_Part{
}

@gmf.node(label = "Parameter_In_Name")
class ParameterIn extends Parameters{
	attr String Parameter_In_Name;
}

@gmf.node(label = "Parameter_Out_Name")
class ParameterOut extends Parameters{
	attr String Parameter_Out_Name;
}

@gmf.node(label = "Parameter_In_Out_Name")
class ParameterInOut extends Parameters{
	attr String Parameter_In_Out_Name;
}