/*
 * 
 */
package crystal.diagram.edit.parts;

import org.eclipse.gef.EditPart;
import org.eclipse.gef.EditPartFactory;
import org.eclipse.gef.tools.CellEditorLocator;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
import org.eclipse.gmf.runtime.notation.View;
import org.eclipse.gmf.tooling.runtime.directedit.locator.CellEditorLocatorAccess;

import crystal.diagram.part.CrystalVisualIDRegistry;

/**
 * @generated
 */
public class CrystalEditPartFactory implements EditPartFactory {

	/**
	 * @generated
	 */
	public EditPart createEditPart(EditPart context, Object model) {
		if (model instanceof View) {
			View view = (View) model;
			switch (CrystalVisualIDRegistry.getVisualID(view)) {

			case CrystalEditPart.VISUAL_ID:
				return new CrystalEditPart(view);

			case ParametersEditPart.VISUAL_ID:
				return new ParametersEditPart(view);

			case ParametersNameEditPart.VISUAL_ID:
				return new ParametersNameEditPart(view);

			case ReturnEditPart.VISUAL_ID:
				return new ReturnEditPart(view);

			case ReturnNameEditPart.VISUAL_ID:
				return new ReturnNameEditPart(view);

			case DeclarativePartEditPart.VISUAL_ID:
				return new DeclarativePartEditPart(view);

			case DeclarativePartNameEditPart.VISUAL_ID:
				return new DeclarativePartNameEditPart(view);

			case ExecutablePartEditPart.VISUAL_ID:
				return new ExecutablePartEditPart(view);

			case ExecutablePartNameEditPart.VISUAL_ID:
				return new ExecutablePartNameEditPart(view);

			case ProcedureEditPart.VISUAL_ID:
				return new ProcedureEditPart(view);

			case ProcedureNameEditPart.VISUAL_ID:
				return new ProcedureNameEditPart(view);

			case FunctionEditPart.VISUAL_ID:
				return new FunctionEditPart(view);

			case FunctionNameEditPart.VISUAL_ID:
				return new FunctionNameEditPart(view);

			case AnonymousBlockEditPart.VISUAL_ID:
				return new AnonymousBlockEditPart(view);

			case AnonymousBlockNameEditPart.VISUAL_ID:
				return new AnonymousBlockNameEditPart(view);

			case DataTypeEditPart.VISUAL_ID:
				return new DataTypeEditPart(view);

			case DataTypeNameEditPart.VISUAL_ID:
				return new DataTypeNameEditPart(view);

			case CollectionsEditPart.VISUAL_ID:
				return new CollectionsEditPart(view);

			case CollectionsNameEditPart.VISUAL_ID:
				return new CollectionsNameEditPart(view);

			case RecordsEditPart.VISUAL_ID:
				return new RecordsEditPart(view);

			case RecordsNameEditPart.VISUAL_ID:
				return new RecordsNameEditPart(view);

			case CursorEditPart.VISUAL_ID:
				return new CursorEditPart(view);

			case CursorNameEditPart.VISUAL_ID:
				return new CursorNameEditPart(view);

			case DataType2EditPart.VISUAL_ID:
				return new DataType2EditPart(view);

			case DataTypeName2EditPart.VISUAL_ID:
				return new DataTypeName2EditPart(view);

			case Collections2EditPart.VISUAL_ID:
				return new Collections2EditPart(view);

			case CollectionsName2EditPart.VISUAL_ID:
				return new CollectionsName2EditPart(view);

			case Records2EditPart.VISUAL_ID:
				return new Records2EditPart(view);

			case RecordsName2EditPart.VISUAL_ID:
				return new RecordsName2EditPart(view);

			case Cursor2EditPart.VISUAL_ID:
				return new Cursor2EditPart(view);

			case CursorName2EditPart.VISUAL_ID:
				return new CursorName2EditPart(view);

			case DataType3EditPart.VISUAL_ID:
				return new DataType3EditPart(view);

			case DataTypeName3EditPart.VISUAL_ID:
				return new DataTypeName3EditPart(view);

			case Collections3EditPart.VISUAL_ID:
				return new Collections3EditPart(view);

			case CollectionsName3EditPart.VISUAL_ID:
				return new CollectionsName3EditPart(view);

			case Records3EditPart.VISUAL_ID:
				return new Records3EditPart(view);

			case RecordsName3EditPart.VISUAL_ID:
				return new RecordsName3EditPart(view);

			case Cursor3EditPart.VISUAL_ID:
				return new Cursor3EditPart(view);

			case CursorName3EditPart.VISUAL_ID:
				return new CursorName3EditPart(view);

			case ExpressionsEditPart.VISUAL_ID:
				return new ExpressionsEditPart(view);

			case ExpressionsNameEditPart.VISUAL_ID:
				return new ExpressionsNameEditPart(view);

			case ExceptionEditPart.VISUAL_ID:
				return new ExceptionEditPart(view);

			case ExceptionNameEditPart.VISUAL_ID:
				return new ExceptionNameEditPart(view);

			case IfEditPart.VISUAL_ID:
				return new IfEditPart(view);

			case IfNameEditPart.VISUAL_ID:
				return new IfNameEditPart(view);

			case CaseEditPart.VISUAL_ID:
				return new CaseEditPart(view);

			case CaseNameEditPart.VISUAL_ID:
				return new CaseNameEditPart(view);

			case InsertEditPart.VISUAL_ID:
				return new InsertEditPart(view);

			case InsertNameEditPart.VISUAL_ID:
				return new InsertNameEditPart(view);

			case UpdateEditPart.VISUAL_ID:
				return new UpdateEditPart(view);

			case UpdateNameEditPart.VISUAL_ID:
				return new UpdateNameEditPart(view);

			case DeleteEditPart.VISUAL_ID:
				return new DeleteEditPart(view);

			case DeleteNameEditPart.VISUAL_ID:
				return new DeleteNameEditPart(view);

			case SelectEditPart.VISUAL_ID:
				return new SelectEditPart(view);

			case SelectNameEditPart.VISUAL_ID:
				return new SelectNameEditPart(view);

			case WhileEditPart.VISUAL_ID:
				return new WhileEditPart(view);

			case WhileNameEditPart.VISUAL_ID:
				return new WhileNameEditPart(view);

			case ForEditPart.VISUAL_ID:
				return new ForEditPart(view);

			case ForNameEditPart.VISUAL_ID:
				return new ForNameEditPart(view);

			case LoopEditPart.VISUAL_ID:
				return new LoopEditPart(view);

			case LoopNameEditPart.VISUAL_ID:
				return new LoopNameEditPart(view);

			case OpenEditPart.VISUAL_ID:
				return new OpenEditPart(view);

			case OpenNameEditPart.VISUAL_ID:
				return new OpenNameEditPart(view);

			case FetchEditPart.VISUAL_ID:
				return new FetchEditPart(view);

			case FetchNameEditPart.VISUAL_ID:
				return new FetchNameEditPart(view);

			case CloseEditPart.VISUAL_ID:
				return new CloseEditPart(view);

			case CloseNameEditPart.VISUAL_ID:
				return new CloseNameEditPart(view);

			case DataType4EditPart.VISUAL_ID:
				return new DataType4EditPart(view);

			case DataTypeName4EditPart.VISUAL_ID:
				return new DataTypeName4EditPart(view);

			case Collections4EditPart.VISUAL_ID:
				return new Collections4EditPart(view);

			case CollectionsName4EditPart.VISUAL_ID:
				return new CollectionsName4EditPart(view);

			case Records4EditPart.VISUAL_ID:
				return new Records4EditPart(view);

			case RecordsName4EditPart.VISUAL_ID:
				return new RecordsName4EditPart(view);

			case Cursor4EditPart.VISUAL_ID:
				return new Cursor4EditPart(view);

			case CursorName4EditPart.VISUAL_ID:
				return new CursorName4EditPart(view);

			case DataType5EditPart.VISUAL_ID:
				return new DataType5EditPart(view);

			case DataTypeName5EditPart.VISUAL_ID:
				return new DataTypeName5EditPart(view);

			case Collections5EditPart.VISUAL_ID:
				return new Collections5EditPart(view);

			case CollectionsName5EditPart.VISUAL_ID:
				return new CollectionsName5EditPart(view);

			case Records5EditPart.VISUAL_ID:
				return new Records5EditPart(view);

			case RecordsName5EditPart.VISUAL_ID:
				return new RecordsName5EditPart(view);

			case Cursor5EditPart.VISUAL_ID:
				return new Cursor5EditPart(view);

			case CursorName5EditPart.VISUAL_ID:
				return new CursorName5EditPart(view);

			case Expressions2EditPart.VISUAL_ID:
				return new Expressions2EditPart(view);

			case ExpressionsName2EditPart.VISUAL_ID:
				return new ExpressionsName2EditPart(view);

			case Exception2EditPart.VISUAL_ID:
				return new Exception2EditPart(view);

			case ExceptionName2EditPart.VISUAL_ID:
				return new ExceptionName2EditPart(view);

			case If2EditPart.VISUAL_ID:
				return new If2EditPart(view);

			case IfName2EditPart.VISUAL_ID:
				return new IfName2EditPart(view);

			case Case2EditPart.VISUAL_ID:
				return new Case2EditPart(view);

			case CaseName2EditPart.VISUAL_ID:
				return new CaseName2EditPart(view);

			case Insert2EditPart.VISUAL_ID:
				return new Insert2EditPart(view);

			case InsertName2EditPart.VISUAL_ID:
				return new InsertName2EditPart(view);

			case Update2EditPart.VISUAL_ID:
				return new Update2EditPart(view);

			case UpdateName2EditPart.VISUAL_ID:
				return new UpdateName2EditPart(view);

			case Delete2EditPart.VISUAL_ID:
				return new Delete2EditPart(view);

			case DeleteName2EditPart.VISUAL_ID:
				return new DeleteName2EditPart(view);

			case Select2EditPart.VISUAL_ID:
				return new Select2EditPart(view);

			case SelectName2EditPart.VISUAL_ID:
				return new SelectName2EditPart(view);

			case While2EditPart.VISUAL_ID:
				return new While2EditPart(view);

			case WhileName2EditPart.VISUAL_ID:
				return new WhileName2EditPart(view);

			case For2EditPart.VISUAL_ID:
				return new For2EditPart(view);

			case ForName2EditPart.VISUAL_ID:
				return new ForName2EditPart(view);

			case Loop2EditPart.VISUAL_ID:
				return new Loop2EditPart(view);

			case LoopName2EditPart.VISUAL_ID:
				return new LoopName2EditPart(view);

			case Open2EditPart.VISUAL_ID:
				return new Open2EditPart(view);

			case OpenName2EditPart.VISUAL_ID:
				return new OpenName2EditPart(view);

			case Fetch2EditPart.VISUAL_ID:
				return new Fetch2EditPart(view);

			case FetchName2EditPart.VISUAL_ID:
				return new FetchName2EditPart(view);

			case Close2EditPart.VISUAL_ID:
				return new Close2EditPart(view);

			case CloseName2EditPart.VISUAL_ID:
				return new CloseName2EditPart(view);

			case DataType6EditPart.VISUAL_ID:
				return new DataType6EditPart(view);

			case DataTypeName6EditPart.VISUAL_ID:
				return new DataTypeName6EditPart(view);

			case Collections6EditPart.VISUAL_ID:
				return new Collections6EditPart(view);

			case CollectionsName6EditPart.VISUAL_ID:
				return new CollectionsName6EditPart(view);

			case Records6EditPart.VISUAL_ID:
				return new Records6EditPart(view);

			case RecordsName6EditPart.VISUAL_ID:
				return new RecordsName6EditPart(view);

			case Cursor6EditPart.VISUAL_ID:
				return new Cursor6EditPart(view);

			case CursorName6EditPart.VISUAL_ID:
				return new CursorName6EditPart(view);

			case DataType7EditPart.VISUAL_ID:
				return new DataType7EditPart(view);

			case DataTypeName7EditPart.VISUAL_ID:
				return new DataTypeName7EditPart(view);

			case Collections7EditPart.VISUAL_ID:
				return new Collections7EditPart(view);

			case CollectionsName7EditPart.VISUAL_ID:
				return new CollectionsName7EditPart(view);

			case Records7EditPart.VISUAL_ID:
				return new Records7EditPart(view);

			case RecordsName7EditPart.VISUAL_ID:
				return new RecordsName7EditPart(view);

			case Cursor7EditPart.VISUAL_ID:
				return new Cursor7EditPart(view);

			case CursorName7EditPart.VISUAL_ID:
				return new CursorName7EditPart(view);

			case Expressions3EditPart.VISUAL_ID:
				return new Expressions3EditPart(view);

			case ExpressionsName3EditPart.VISUAL_ID:
				return new ExpressionsName3EditPart(view);

			case Exception3EditPart.VISUAL_ID:
				return new Exception3EditPart(view);

			case ExceptionName3EditPart.VISUAL_ID:
				return new ExceptionName3EditPart(view);

			case If3EditPart.VISUAL_ID:
				return new If3EditPart(view);

			case IfName3EditPart.VISUAL_ID:
				return new IfName3EditPart(view);

			case Case3EditPart.VISUAL_ID:
				return new Case3EditPart(view);

			case CaseName3EditPart.VISUAL_ID:
				return new CaseName3EditPart(view);

			case Insert3EditPart.VISUAL_ID:
				return new Insert3EditPart(view);

			case InsertName3EditPart.VISUAL_ID:
				return new InsertName3EditPart(view);

			case Update3EditPart.VISUAL_ID:
				return new Update3EditPart(view);

			case UpdateName3EditPart.VISUAL_ID:
				return new UpdateName3EditPart(view);

			case Delete3EditPart.VISUAL_ID:
				return new Delete3EditPart(view);

			case DeleteName3EditPart.VISUAL_ID:
				return new DeleteName3EditPart(view);

			case Select3EditPart.VISUAL_ID:
				return new Select3EditPart(view);

			case SelectName3EditPart.VISUAL_ID:
				return new SelectName3EditPart(view);

			case While3EditPart.VISUAL_ID:
				return new While3EditPart(view);

			case WhileName3EditPart.VISUAL_ID:
				return new WhileName3EditPart(view);

			case For3EditPart.VISUAL_ID:
				return new For3EditPart(view);

			case ForName3EditPart.VISUAL_ID:
				return new ForName3EditPart(view);

			case Loop3EditPart.VISUAL_ID:
				return new Loop3EditPart(view);

			case LoopName3EditPart.VISUAL_ID:
				return new LoopName3EditPart(view);

			case Open3EditPart.VISUAL_ID:
				return new Open3EditPart(view);

			case OpenName3EditPart.VISUAL_ID:
				return new OpenName3EditPart(view);

			case Fetch3EditPart.VISUAL_ID:
				return new Fetch3EditPart(view);

			case FetchName3EditPart.VISUAL_ID:
				return new FetchName3EditPart(view);

			case Close3EditPart.VISUAL_ID:
				return new Close3EditPart(view);

			case CloseName3EditPart.VISUAL_ID:
				return new CloseName3EditPart(view);

			case DataType8EditPart.VISUAL_ID:
				return new DataType8EditPart(view);

			case DataTypeName8EditPart.VISUAL_ID:
				return new DataTypeName8EditPart(view);

			case Collections8EditPart.VISUAL_ID:
				return new Collections8EditPart(view);

			case CollectionsName8EditPart.VISUAL_ID:
				return new CollectionsName8EditPart(view);

			case Records8EditPart.VISUAL_ID:
				return new Records8EditPart(view);

			case RecordsName8EditPart.VISUAL_ID:
				return new RecordsName8EditPart(view);

			case Cursor8EditPart.VISUAL_ID:
				return new Cursor8EditPart(view);

			case CursorName8EditPart.VISUAL_ID:
				return new CursorName8EditPart(view);

			case DataType9EditPart.VISUAL_ID:
				return new DataType9EditPart(view);

			case DataTypeName9EditPart.VISUAL_ID:
				return new DataTypeName9EditPart(view);

			case Collections9EditPart.VISUAL_ID:
				return new Collections9EditPart(view);

			case CollectionsName9EditPart.VISUAL_ID:
				return new CollectionsName9EditPart(view);

			case Records9EditPart.VISUAL_ID:
				return new Records9EditPart(view);

			case RecordsName9EditPart.VISUAL_ID:
				return new RecordsName9EditPart(view);

			case Cursor9EditPart.VISUAL_ID:
				return new Cursor9EditPart(view);

			case CursorName9EditPart.VISUAL_ID:
				return new CursorName9EditPart(view);

			case Expressions4EditPart.VISUAL_ID:
				return new Expressions4EditPart(view);

			case ExpressionsName4EditPart.VISUAL_ID:
				return new ExpressionsName4EditPart(view);

			case Exception4EditPart.VISUAL_ID:
				return new Exception4EditPart(view);

			case ExceptionName4EditPart.VISUAL_ID:
				return new ExceptionName4EditPart(view);

			case If4EditPart.VISUAL_ID:
				return new If4EditPart(view);

			case IfName4EditPart.VISUAL_ID:
				return new IfName4EditPart(view);

			case Case4EditPart.VISUAL_ID:
				return new Case4EditPart(view);

			case CaseName4EditPart.VISUAL_ID:
				return new CaseName4EditPart(view);

			case Insert4EditPart.VISUAL_ID:
				return new Insert4EditPart(view);

			case InsertName4EditPart.VISUAL_ID:
				return new InsertName4EditPart(view);

			case Update4EditPart.VISUAL_ID:
				return new Update4EditPart(view);

			case UpdateName4EditPart.VISUAL_ID:
				return new UpdateName4EditPart(view);

			case Delete4EditPart.VISUAL_ID:
				return new Delete4EditPart(view);

			case DeleteName4EditPart.VISUAL_ID:
				return new DeleteName4EditPart(view);

			case Select4EditPart.VISUAL_ID:
				return new Select4EditPart(view);

			case SelectName4EditPart.VISUAL_ID:
				return new SelectName4EditPart(view);

			case While4EditPart.VISUAL_ID:
				return new While4EditPart(view);

			case WhileName4EditPart.VISUAL_ID:
				return new WhileName4EditPart(view);

			case For4EditPart.VISUAL_ID:
				return new For4EditPart(view);

			case ForName4EditPart.VISUAL_ID:
				return new ForName4EditPart(view);

			case Loop4EditPart.VISUAL_ID:
				return new Loop4EditPart(view);

			case LoopName4EditPart.VISUAL_ID:
				return new LoopName4EditPart(view);

			case Open4EditPart.VISUAL_ID:
				return new Open4EditPart(view);

			case OpenName4EditPart.VISUAL_ID:
				return new OpenName4EditPart(view);

			case Fetch4EditPart.VISUAL_ID:
				return new Fetch4EditPart(view);

			case FetchName4EditPart.VISUAL_ID:
				return new FetchName4EditPart(view);

			case Close4EditPart.VISUAL_ID:
				return new Close4EditPart(view);

			case CloseName4EditPart.VISUAL_ID:
				return new CloseName4EditPart(view);

			case ParametersParametersVariablesCompartmentEditPart.VISUAL_ID:
				return new ParametersParametersVariablesCompartmentEditPart(
						view);

			case ReturnReturnVariablesCompartmentEditPart.VISUAL_ID:
				return new ReturnReturnVariablesCompartmentEditPart(view);

			case DeclarativePartDeclarativePartVariablesCompartmentEditPart.VISUAL_ID:
				return new DeclarativePartDeclarativePartVariablesCompartmentEditPart(
						view);

			case ExecutablePartExecutablePartObjectsCompartmentEditPart.VISUAL_ID:
				return new ExecutablePartExecutablePartObjectsCompartmentEditPart(
						view);

			case ProcedureProcedureParametersCompartmentEditPart.VISUAL_ID:
				return new ProcedureProcedureParametersCompartmentEditPart(view);

			case ProcedureProcedureDeclarativePartCompartmentEditPart.VISUAL_ID:
				return new ProcedureProcedureDeclarativePartCompartmentEditPart(
						view);

			case ProcedureProcedureExecutablePartCompartmentEditPart.VISUAL_ID:
				return new ProcedureProcedureExecutablePartCompartmentEditPart(
						view);

			case FunctionFunctionParametersCompartmentEditPart.VISUAL_ID:
				return new FunctionFunctionParametersCompartmentEditPart(view);

			case FunctionFunctionDeclarativePartCompartmentEditPart.VISUAL_ID:
				return new FunctionFunctionDeclarativePartCompartmentEditPart(
						view);

			case FunctionFunctionExecutablePartCompartmentEditPart.VISUAL_ID:
				return new FunctionFunctionExecutablePartCompartmentEditPart(
						view);

			case FunctionFunctionReturnPartCompartmentEditPart.VISUAL_ID:
				return new FunctionFunctionReturnPartCompartmentEditPart(view);

			case AnonymousBlockAnonymousBlockDeclarativePartCompartmentEditPart.VISUAL_ID:
				return new AnonymousBlockAnonymousBlockDeclarativePartCompartmentEditPart(
						view);

			case AnonymousBlockAnonymousBlockExecutablePartCompartmentEditPart.VISUAL_ID:
				return new AnonymousBlockAnonymousBlockExecutablePartCompartmentEditPart(
						view);

			case TransitionEditPart.VISUAL_ID:
				return new TransitionEditPart(view);

			}
		}
		return createUnrecognizedEditPart(context, model);
	}

	/**
	 * @generated
	 */
	private EditPart createUnrecognizedEditPart(EditPart context, Object model) {
		// Handle creation of unrecognized child node EditParts here
		return null;
	}

	/**
	 * @generated
	 */
	public static CellEditorLocator getTextCellEditorLocator(
			ITextAwareEditPart source) {
		return CellEditorLocatorAccess.INSTANCE
				.getTextCellEditorLocator(source);
	}

}
