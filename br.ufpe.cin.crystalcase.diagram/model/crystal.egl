#auto-generated by CrystalCASE

[%

for(element in Procedure.allInstances()) {

	out.println("CREATE OR REPLACE PROCEDURE "+element.name); --static
	out.println("AS"); --static
	out.println("BEGIN"); --static
	
	for(statements in element.executablePart) {
		out.println("   " + statements.code + ";");
	}
	
	out.println("END;"); --static
	out.println("/"); --static
	out.println();
}

for(element in Function.allInstances()) {

	//DECLARAÇÃO DE VARIÁVEIS
	if(not isEmpty(element.declarativePart)){
		for(declaration in element.declarativePart){
			out.println("DECLARE"); --static
			if(not (declaration.className == "DataType")) {
				out.println("   " + declaration.name + " " + declaration.className + ";");
			} else {
				out.println("   " + declaration.name + " " + declaration.options + ";");
			}
		}
	}
	
	out.println("CREATE OR REPLACE FUNCTION "+element.name); --static
	
	//PARAMETROS
	
	//RETORNO
	var returnStatement;
	for(backStatement in element.returnPart) {
		returnStatement = backStatement;
		out.println("RETURN " + backStatement.options);
		out.println("IS " + backStatement.name + " " + backStatement.options + ";");
	}
	
	out.println("BEGIN"); --static
	
	for(statements in element.executablePart) {
		out.println("   " + statements.code + ";");
	}
	
	out.println("RETURN " + returnStatement.name + ";");
	out.println("END;"); --static
	out.println("/"); --static
	out.println();
}

operation isEmpty (object) {
   if(object.size > 0){
      return false;
   }
   return true;
}
%]